{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guilherme\\\\desktop\\\\proj-jogoforca\\\\src\\\\components\\\\Letras.js\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Letras(_ref) {\n  let {\n    erros,\n    setErros,\n    palavraJogo,\n    setPalavraJogo,\n    palavraRandom,\n    setPalavraRandom,\n    setClasseCor,\n    setDesabilitadorElementos,\n    setLetrasEscolhidas,\n    letrasEscolhidas,\n    alfabeto\n  } = _ref;\n  function selecionarLetra(letra) {\n    const novoArray = [...letrasEscolhidas, letra];\n    setLetrasEscolhidas(novoArray);\n    console.log;\n    if (palavraRandom.includes(letra)) {\n      const novaPalavra = [...palavraJogo];\n      palavraRandom.forEach((l, i) => {\n        if (l === letra) {\n          novaPalavra[i] = l;\n        }\n      });\n      setPalavraJogo(novaPalavra);\n      if (palavraRandom.join('') === novaPalavra.join('')) {\n        alert('Hello world');\n      }\n    } else {\n      const totalDeErros = erros + 1;\n      setErros(totalDeErros);\n      if (totalDeErros === 6) {\n        setPalavraJogo(palavraRandom);\n        setClasseCor('red');\n        inativar();\n      }\n    }\n  }\n  function inativar() {\n    setDesabilitadorElementos(true);\n    setLetrasEscolhidas([...alfabeto]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alfabeto\",\n    children: alfabeto.map(letra => /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: letrasEscolhidas.includes(letra),\n      onClick: () => selecionarLetra(letra),\n      children: letra\n    }, letra, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 34\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_c = Letras;\nvar _c;\n$RefreshReg$(_c, \"Letras\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Letras","_ref","erros","setErros","palavraJogo","setPalavraJogo","palavraRandom","setPalavraRandom","setClasseCor","setDesabilitadorElementos","setLetrasEscolhidas","letrasEscolhidas","alfabeto","selecionarLetra","letra","novoArray","console","log","includes","novaPalavra","forEach","l","i","join","alert","totalDeErros","inativar","className","children","map","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Guilherme/desktop/proj-jogoforca/src/components/Letras.js"],"sourcesContent":["import {useState} from 'react'\r\n\r\nexport default function Letras({erros, setErros, palavraJogo, setPalavraJogo, palavraRandom, setPalavraRandom, setClasseCor, setDesabilitadorElementos, setLetrasEscolhidas, letrasEscolhidas, alfabeto}) {\r\n\r\n    \r\n    \r\n    function selecionarLetra(letra) {\r\n        const novoArray = [...letrasEscolhidas, letra];\r\n        setLetrasEscolhidas(novoArray);\r\n\r\n        console.log \r\n    \r\n        if (palavraRandom.includes(letra)){\r\n          const novaPalavra = [...palavraJogo]\r\n          palavraRandom.forEach((l,i) => {\r\n            if (l === letra){\r\n              novaPalavra[i] = l              \r\n            }\r\n          })\r\n          setPalavraJogo(novaPalavra)\r\n          if (palavraRandom.join('') === novaPalavra.join('')){\r\n            alert('Hello world')\r\n          }\r\n        } else {\r\n            const totalDeErros = erros + 1\r\n            setErros(totalDeErros)\r\n    \r\n          if(totalDeErros === 6){\r\n            setPalavraJogo(palavraRandom)\r\n            setClasseCor('red')\r\n            inativar()        \r\n          }\r\n        }    \r\n      }\r\n\r\n    function inativar(){\r\n        setDesabilitadorElementos(true);\r\n        setLetrasEscolhidas([...alfabeto])    \r\n    }\r\n    \r\n    return (\r\n        <div className='alfabeto'>\r\n          {alfabeto.map(letra=> (<button key={letra} disabled={letrasEscolhidas.includes(letra)} onClick={()=>selecionarLetra(letra)}>{letra}</button>))}\r\n        </div>\r\n    )\r\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAA4K;EAAA,IAA3K;IAACC,KAAK;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,cAAc;IAAEC,aAAa;IAAEC,gBAAgB;IAAEC,YAAY;IAAEC,yBAAyB;IAAEC,mBAAmB;IAAEC,gBAAgB;IAAEC;EAAQ,CAAC,GAAAX,IAAA;EAIpM,SAASY,eAAeA,CAACC,KAAK,EAAE;IAC5B,MAAMC,SAAS,GAAG,CAAC,GAAGJ,gBAAgB,EAAEG,KAAK,CAAC;IAC9CJ,mBAAmB,CAACK,SAAS,CAAC;IAE9BC,OAAO,CAACC,GAAG;IAEX,IAAIX,aAAa,CAACY,QAAQ,CAACJ,KAAK,CAAC,EAAC;MAChC,MAAMK,WAAW,GAAG,CAAC,GAAGf,WAAW,CAAC;MACpCE,aAAa,CAACc,OAAO,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;QAC7B,IAAID,CAAC,KAAKP,KAAK,EAAC;UACdK,WAAW,CAACG,CAAC,CAAC,GAAGD,CAAC;QACpB;MACF,CAAC,CAAC;MACFhB,cAAc,CAACc,WAAW,CAAC;MAC3B,IAAIb,aAAa,CAACiB,IAAI,CAAC,EAAE,CAAC,KAAKJ,WAAW,CAACI,IAAI,CAAC,EAAE,CAAC,EAAC;QAClDC,KAAK,CAAC,aAAa,CAAC;MACtB;IACF,CAAC,MAAM;MACH,MAAMC,YAAY,GAAGvB,KAAK,GAAG,CAAC;MAC9BC,QAAQ,CAACsB,YAAY,CAAC;MAExB,IAAGA,YAAY,KAAK,CAAC,EAAC;QACpBpB,cAAc,CAACC,aAAa,CAAC;QAC7BE,YAAY,CAAC,KAAK,CAAC;QACnBkB,QAAQ,CAAC,CAAC;MACZ;IACF;EACF;EAEF,SAASA,QAAQA,CAAA,EAAE;IACfjB,yBAAyB,CAAC,IAAI,CAAC;IAC/BC,mBAAmB,CAAC,CAAC,GAAGE,QAAQ,CAAC,CAAC;EACtC;EAEA,oBACIb,OAAA;IAAK4B,SAAS,EAAC,UAAU;IAAAC,QAAA,EACtBhB,QAAQ,CAACiB,GAAG,CAACf,KAAK,iBAAIf,OAAA;MAAoB+B,QAAQ,EAAEnB,gBAAgB,CAACO,QAAQ,CAACJ,KAAK,CAAE;MAACiB,OAAO,EAAEA,CAAA,KAAIlB,eAAe,CAACC,KAAK,CAAE;MAAAc,QAAA,EAAEd;IAAK,GAA9FA,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkG,CAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3I,CAAC;AAEd;AAACC,EAAA,GA3CuBpC,MAAM;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}