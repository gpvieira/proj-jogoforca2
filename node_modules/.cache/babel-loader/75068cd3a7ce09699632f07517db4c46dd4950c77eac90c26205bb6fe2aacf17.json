{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guilherme\\\\desktop\\\\proj-jogoforca\\\\src\\\\components\\\\Jogo.js\";\nimport forca0 from './../assets/forca0.png';\nimport forca1 from './../assets/forca1.png';\nimport forca2 from './../assets/forca2.png';\nimport forca3 from './../assets/forca3.png';\nimport forca4 from './../assets/forca4.png';\nimport forca5 from './../assets/forca5.png';\nimport forca6 from './../assets/forca6.png';\nimport palavras from '../palavras.js';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imagens = [forca0, forca1, forca2, forca3, forca4, forca5, forca6];\nexport default function Jogo(_ref) {\n  let {\n    setPalavraRandom,\n    palavraRandom,\n    erros,\n    setErros,\n    palavraJogo,\n    setPalavraJogo,\n    classeCor,\n    setClasseCor,\n    setDesabilitadorElementos,\n    setLetrasEscolhidas,\n    letrasEscolhidas\n  } = _ref;\n  function comecarJogo() {\n    setDesabilitadorElementos(false);\n    setLetrasEscolhidas([]);\n    setErros(0);\n    setClasseCor('black');\n    const indiceRandom = Math.floor(Math.random() * palavras.length);\n    const palavra = palavras[indiceRandom];\n    const arrayPalavra = palavra.split('');\n    setPalavraRandom(arrayPalavra);\n    const espacosEmBranco = arrayPalavra.map(letra => ' _');\n    setPalavraJogo(espacosEmBranco);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forca\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagens[erros],\n      alt: \"img da forca\",\n      \"data-test\": \"game-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: comecarJogo,\n      \"data-test\": \"choose-word\",\n      children: \"Escolher Palavra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classeCor,\n      children: palavraJogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = Jogo;\nvar _c;\n$RefreshReg$(_c, \"Jogo\");","map":{"version":3,"names":["forca0","forca1","forca2","forca3","forca4","forca5","forca6","palavras","useState","jsxDEV","_jsxDEV","imagens","Jogo","_ref","setPalavraRandom","palavraRandom","erros","setErros","palavraJogo","setPalavraJogo","classeCor","setClasseCor","setDesabilitadorElementos","setLetrasEscolhidas","letrasEscolhidas","comecarJogo","indiceRandom","Math","floor","random","length","palavra","arrayPalavra","split","espacosEmBranco","map","letra","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Guilherme/desktop/proj-jogoforca/src/components/Jogo.js"],"sourcesContent":["\r\nimport forca0 from './../assets/forca0.png'\r\nimport forca1 from './../assets/forca1.png'\r\nimport forca2 from './../assets/forca2.png'\r\nimport forca3 from './../assets/forca3.png'\r\nimport forca4 from './../assets/forca4.png'\r\nimport forca5 from './../assets/forca5.png'\r\nimport forca6 from './../assets/forca6.png'\r\nimport palavras from '../palavras.js'\r\nimport { useState } from 'react'\r\n\r\nconst imagens = [forca0, forca1, forca2, forca3, forca4, forca5, forca6]\r\n\r\nexport default function Jogo({setPalavraRandom, palavraRandom, erros, setErros, palavraJogo, setPalavraJogo, classeCor, setClasseCor, setDesabilitadorElementos, setLetrasEscolhidas, letrasEscolhidas}) {\r\n\r\n    \r\n\r\n    function comecarJogo(){\r\n        setDesabilitadorElementos(false);\r\n        setLetrasEscolhidas([])\r\n        setErros(0)\r\n        setClasseCor('black')    \r\n        const indiceRandom = Math.floor(Math.random() * palavras.length)\r\n        const palavra = palavras[indiceRandom]\r\n        const arrayPalavra = palavra.split('');\r\n        setPalavraRandom(arrayPalavra);        \r\n        const espacosEmBranco = arrayPalavra.map(letra => ' _')\r\n        setPalavraJogo(espacosEmBranco)\r\n     }    \r\n\r\n    return (\r\n        <div className='forca'>\r\n            <img src={imagens[erros]} alt='img da forca' data-test=\"game-image\"/>\r\n            <button onClick={comecarJogo} data-test=\"choose-word\">Escolher Palavra</button>\r\n            <h1 className={classeCor}>{palavraJogo}</h1>\r\n        </div>\r\n    )\r\n}"],"mappings":";AACA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,OAAO,GAAG,CAACX,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,CAAC;AAExE,eAAe,SAASM,IAAIA,CAAAC,IAAA,EAA6K;EAAA,IAA5K;IAACC,gBAAgB;IAAEC,aAAa;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,cAAc;IAAEC,SAAS;IAAEC,YAAY;IAAEC,yBAAyB;IAAEC,mBAAmB;IAAEC;EAAgB,CAAC,GAAAX,IAAA;EAInM,SAASY,WAAWA,CAAA,EAAE;IAClBH,yBAAyB,CAAC,KAAK,CAAC;IAChCC,mBAAmB,CAAC,EAAE,CAAC;IACvBN,QAAQ,CAAC,CAAC,CAAC;IACXI,YAAY,CAAC,OAAO,CAAC;IACrB,MAAMK,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGtB,QAAQ,CAACuB,MAAM,CAAC;IAChE,MAAMC,OAAO,GAAGxB,QAAQ,CAACmB,YAAY,CAAC;IACtC,MAAMM,YAAY,GAAGD,OAAO,CAACE,KAAK,CAAC,EAAE,CAAC;IACtCnB,gBAAgB,CAACkB,YAAY,CAAC;IAC9B,MAAME,eAAe,GAAGF,YAAY,CAACG,GAAG,CAACC,KAAK,IAAI,IAAI,CAAC;IACvDjB,cAAc,CAACe,eAAe,CAAC;EAClC;EAED,oBACIxB,OAAA;IAAK2B,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClB5B,OAAA;MAAK6B,GAAG,EAAE5B,OAAO,CAACK,KAAK,CAAE;MAACwB,GAAG,EAAC,cAAc;MAAC,aAAU;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrElC,OAAA;MAAQmC,OAAO,EAAEpB,WAAY;MAAC,aAAU,aAAa;MAAAa,QAAA,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/ElC,OAAA;MAAI2B,SAAS,EAAEjB,SAAU;MAAAkB,QAAA,EAAEpB;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEd;AAACE,EAAA,GAxBuBlC,IAAI;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}